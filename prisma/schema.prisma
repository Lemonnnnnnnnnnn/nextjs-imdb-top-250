// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // url      = env("DATABASE_URL")
  url      = "file:./imdb.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String     @id @default(cuid())
  name           String?
  email          String?    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  accounts       Account[]
  sessions       Session[]
  likeImdbItem   ImdbItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ImdbItem {
  id              String     @id @unique
  plot            String
  plotCn          String     @default("")
  fullTitle       String
  imDbRating      String
  image           String
  imDbRatingCount String
  rank            Int
  title           String
  titleCn         String     @default("")
  year            Int
  thumbnail       String?
  users           User[]
  images          Image[]
  actors          Actor[]
  isTop250        Boolean
  similars        ImdbItem[] @relation("similarItem")
  beSimilars      ImdbItem[] @relation("similarItem")
  genres          Genre[]
  countrys        Country[]
  keywords        Keyword[]
}

model Image {
  id       String   @id @default(cuid())
  url      String
  imDbId   String
  imdbItem ImdbItem @relation(fields: [imDbId], references: [id], onDelete: Cascade)
  actorId  String?
  actor    Actor?   @relation(fields: [actorId], references: [id], onDelete: Cascade)
  title    String?
}

model Actor {
  id     String     @id @unique
  image  Image[]
  name   String
  nameCn String     @default("")
  movies ImdbItem[]
}

model Genre {
  key       String     @id @unique
  value     String
  valueCn   String     @default("")
  imdbItems ImdbItem[]
}

model Country {
  key       String     @id @unique
  value     String
  valueCn   String     @default("")
  imdbItems ImdbItem[]
}

model Keyword {
  key       String     @id @unique
  value     String
  imdbItems ImdbItem[]
}
